{"version":3,"file":"jsonLogic.js","sources":["../src/helpers/isArray.js","../src/helpers/isLogic.js","../src/helpers/getOperator.js","../src/createJsonLogic.js","../src/operations/accessor/variable.js","../src/operations/accessor/missing.js","../src/operations/accessor/missingSome.js","../src/operations/arithmetic/add.js","../src/operations/arithmetic/divide.js","../src/operations/arithmetic/modulo.js","../src/operations/arithmetic/multiply.js","../src/operations/arithmetic/substract.js","../src/operations/array/merge.js","../src/operations/array/index.js","../src/operations/logic/equal.js","../src/helpers/truthy.js","../src/operations/logic/not.js","../src/operations/logic/notEqual.js","../src/operations/logic/notnot.js","../src/operations/logic/strictEqual.js","../src/operations/logic/strictNotEqual.js","../src/operations/misc/indexOf.js","../src/operations/misc/log.js","../src/operations/misc/method.js","../src/operations/numeric/greater.js","../src/operations/numeric/greaterEqual.js","../src/operations/numeric/less.js","../src/operations/numeric/lessEqual.js","../src/operations/numeric/max.js","../src/operations/numeric/min.js","../src/operations/string/cat.js","../src/operations/string/substr.js","../src/visitors/array/all.js","../src/visitors/array/filter.js","../src/visitors/array/map.js","../src/visitors/array/none.js","../src/visitors/array/reduce.js","../src/visitors/array/some.js","../src/visitors/logic/and.js","../src/visitors/logic/condition.js","../src/visitors/logic/or.js","../src/helpers/getValues.js","../src/helpers/arrayUnique.js","../src/helpers/usesData.js","../src/helpers/ruleLike.js","../src/index.js"],"sourcesContent":["export default Array.isArray;\n","import isArray from './isArray';\n\nfunction isLogic(logic) {\n  return (\n    typeof logic === 'object' && // An object\n    logic !== null && // but not null\n    !isArray(logic) && // and not an array\n    Object.keys(logic).length === 1 // with exactly one key\n  );\n}\n\nexport default isLogic;\n","function getOperator(logic) {\n  return Object.keys(logic)[0];\n}\n\nexport default getOperator;\n","import isArray from './helpers/isArray';\nimport isLogic from './helpers/isLogic';\nimport getOperator from './helpers/getOperator';\n\nfunction createJsonLogic(_operations, _visitors) {\n  const operations = {};\n  const visitors = {};\n\n  if (_operations) {\n    Object.keys(_operations).forEach(name => {\n      const operation = _operations[name];\n\n      addOperation(operation.op || name, operation);\n    });\n  }\n\n  if (_visitors) {\n    Object.keys(_visitors).forEach(name => {\n      const visitor = _visitors[name];\n\n      addVisitor(visitor.op || name, visitor);\n    });\n  }\n\n  function addOperation(name, op) {\n    operations[name] = op;\n  }\n\n  function removeOperation(name) {\n    delete operations[name];\n  }\n\n  function addVisitor(name, op) {\n    if (isArray(name)) {\n      name.forEach(key => addVisitor(key, op));\n      return;\n    }\n\n    visitors[name] = op;\n  }\n\n  function removeVisitor(name) {\n    if (isArray(name)) {\n      name.forEach(removeVisitor);\n      return;\n    }\n\n    delete visitors[name];\n  }\n\n  function apply(logic, data = {}) {\n    // Does this array contain logic? Only one way to find out.\n    if (isArray(logic)) {\n      return logic.map(l => apply(l, data));\n    }\n    // You've recursed to a primitive, stop!\n    if (!isLogic(logic)) {\n      return logic;\n    }\n\n    const op = getOperator(logic);\n    let values = logic[op];\n    let i;\n\n    // easy syntax for unary operators, like {\"var\" : \"x\"} instead of strict {\"var\" : [\"x\"]}\n    if (!isArray(values)) {\n      values = [values];\n    }\n\n    // apply matching visitors first\n    if (typeof visitors[op] === 'function') {\n      return visitors[op](apply, data, values);\n    }\n\n    // Everyone else gets immediate depth-first recursion\n    values = values.map(val => apply(val, data));\n\n    // The operation is called with \"data\" bound to its \"this\" and \"values\" passed as arguments.\n    // Structured commands like % or > can name formal arguments while flexible commands (like missing or merge) can operate on the pseudo-array arguments\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments\n    const operator = operations[op];\n    if (typeof operator === 'function') {\n      if (operator.withApply) {\n        values.unshift(apply);\n      }\n\n      return operator.apply(data, values);\n    }\n    if (op.indexOf('.') > 0) {\n      // Contains a dot, and not in the 0th position\n      const sub_ops = String(op).split('.');\n      let operation = operations;\n      for (i = 0; i < sub_ops.length; i++) {\n        // Descending into operations\n        operation = operation[sub_ops[i]];\n        if (operation === undefined) {\n          throw new Error(\n            `Unrecognized operation ${op} (failed at ${sub_ops\n              .slice(0, i + 1)\n              .join('.')})`\n          );\n        }\n      }\n\n      return operation.apply(data, values);\n    }\n\n    throw new Error(`Unrecognized operation ${op}`);\n  }\n\n  return {\n    apply,\n    add_operation: addOperation,\n    rm_operation: removeOperation,\n    add_visitor: addVisitor,\n    rm_visitor: removeVisitor,\n  };\n}\n\nexport default createJsonLogic;\n","function variable(a, b) {\n  const not_found = b === undefined ? null : b;\n  let data = this;\n\n  if (typeof a === 'undefined' || a === '' || a === null) {\n    return data;\n  }\n\n  const sub_props = String(a).split('.');\n\n  for (let i = 0; i < sub_props.length; i++) {\n    if (data === null) {\n      return not_found;\n    }\n    // Descending into data\n    data = data[sub_props[i]];\n    if (data === undefined) {\n      return not_found;\n    }\n  }\n\n  return data;\n}\n\nvariable.op = 'var';\n\nexport default variable;\n","import isArray from '../../helpers/isArray';\n\nfunction missing(apply, ...args) {\n  /*\n  Missing can receive many keys as many arguments, like {\"missing:[1,2]}\n  Missing can also receive *one* argument that is an array of keys,\n  which typically happens if it's actually acting on the output of another command\n  (like 'if' or 'merge')\n  */\n\n  const are_missing = [];\n  const keys = isArray(args[0]) ? args[0] : args;\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = apply({ var: key }, this);\n    if (value === null || value === '') {\n      are_missing.push(key);\n    }\n  }\n\n  return are_missing;\n}\n\nmissing.withApply = true;\n\nexport default missing;\n","function missingSome(apply, need_count, options) {\n  // missing_some takes two arguments, how many (minimum) items must be present, and an array of keys (just like 'missing') to check for presence.\n  const are_missing = apply({ missing: options }, this);\n\n  if (options.length - are_missing.length >= need_count) {\n    return [];\n  }\n  return are_missing;\n}\n\nmissingSome.op = 'missing_some';\nmissingSome.withApply = true;\n\nexport default missingSome;\n","function add(...args) {\n  return args.reduce((a, b) => parseFloat(a, 10) + parseFloat(b, 10), 0);\n}\n\nadd.op = '+';\n\nexport default add;\n","function divide(a, b) {\n  return a / b;\n}\n\ndivide.op = '/';\n\nexport default divide;\n","function modulo(a, b) {\n  return a % b;\n}\n\nmodulo.op = '%';\n\nexport default modulo;\n","function multiply(...args) {\n  return args.reduce((a, b) => parseFloat(a, 10) * parseFloat(b, 10), 1);\n}\n\nmultiply.op = '*';\n\nexport default multiply;\n","function substract(a, b) {\n  if (b === undefined) {\n    return -a;\n  }\n  return a - b;\n}\n\nsubstract.op = '-';\n\nexport default substract;\n","function merge(...args) {\n  return args.reduce((a, b) => a.concat(b), []);\n}\n\nexport default merge;\n","// eslint-disable-next-line import/prefer-default-export\nexport { default as merge } from './merge';\n","function equal(a, b) {\n  // eslint-disable-next-line eqeqeq\n  return a == b;\n}\n\nequal.op = '==';\n\nexport default equal;\n","import isArray from './isArray';\n\n/*\n  This helper will defer to the JsonLogic spec as a tie-breaker when different language interpreters define different behavior for the truthiness of primitives.  E.g., PHP considers empty arrays to be falsy, but Javascript considers them to be truthy. JsonLogic, as an ecosystem, needs one consistent answer.\n\n  Spec and rationale here: http://jsonlogic.com/truthy\n  */\nfunction truthy(value) {\n  if (isArray(value) && value.length === 0) {\n    return false;\n  }\n\n  return !!value;\n}\n\nexport default truthy;\n","import truthy from '../../helpers/truthy';\n\nfunction not(a) {\n  return !truthy(a);\n}\n\nnot.op = '!';\n\nexport default not;\n","function notEqual(a, b) {\n  // eslint-disable-next-line eqeqeq\n  return a != b;\n}\n\nnotEqual.op = '!=';\n\nexport default notEqual;\n","import truthy from '../../helpers/truthy';\n\ntruthy.op = '!!';\n\nexport default truthy;\n","function strictEqual(a, b) {\n  return a === b;\n}\n\nstrictEqual.op = '===';\n\nexport default strictEqual;\n","function strictNotEqual(a, b) {\n  return a !== b;\n}\n\nstrictNotEqual.op = '!==';\n\nexport default strictNotEqual;\n","function indexOf(a, b) {\n  if (!b || typeof b.indexOf === 'undefined') return false;\n  return b.indexOf(a) !== -1;\n}\n\nindexOf.op = 'in';\n\nexport default indexOf;\n","function log(a) {\n  // eslint-disable-next-line no-console\n  console.log(a);\n\n  return a;\n}\n\nexport default log;\n","function method(obj, methodName, args) {\n  // eslint-disable-next-line prefer-spread\n  return obj[methodName].apply(obj, args);\n}\n\nexport default method;\n","function greater(a, b) {\n  return a > b;\n}\n\ngreater.op = '>';\n\nexport default greater;\n","function greaterEqual(a, b) {\n  return a >= b;\n}\n\ngreaterEqual.op = '>=';\n\nexport default greaterEqual;\n","function less(a, b, c) {\n  return c === undefined ? a < b : a < b && b < c;\n}\n\nless.op = '<';\n\nexport default less;\n","function lessEqual(a, b, c) {\n  return c === undefined ? a <= b : a <= b && b <= c;\n}\n\nlessEqual.op = '<=';\n\nexport default lessEqual;\n","function max(...args) {\n  return Math.max(...args);\n}\n\nexport default max;\n","function min(...args) {\n  return Math.min(...args);\n}\n\nexport default min;\n","function cat(...args) {\n  return args.join('');\n}\n\nexport default cat;\n","function substr(source, start, end) {\n  if (end < 0) {\n    // JavaScript doesn't support negative end, this emulates PHP behavior\n    const temp = String(source).substr(start);\n    return temp.substr(0, temp.length + end);\n  }\n  return String(source).substr(start, end);\n}\n\nexport default substr;\n","import truthy from '../../helpers/truthy';\n\nfunction all(apply, data, values) {\n  const scopedData = apply(values[0], data);\n  const scopedLogic = values[1];\n  // All of an empty set is false. Note, some and none have correct fallback after the for loop\n  if (!scopedData.length) {\n    return false;\n  }\n  for (let i = 0; i < scopedData.length; i += 1) {\n    if (!truthy(apply(scopedLogic, scopedData[i]))) {\n      return false; // First falsy, short circuit\n    }\n  }\n  return true; // All were truthy\n}\n\nexport default all;\n","import isArray from '../../helpers/isArray';\nimport truthy from '../../helpers/truthy';\n\nfunction filter(apply, data, values) {\n  const scopedData = apply(values[0], data);\n  const scopedLogic = values[1];\n\n  if (!isArray(scopedData)) {\n    return [];\n  }\n  // Return only the elements from the array in the first argument,\n  // that return truthy when passed to the logic in the second argument.\n  // For parity with JavaScript, reindex the returned array\n  return scopedData.filter(datum => truthy(apply(scopedLogic, datum)));\n}\n\nexport default filter;\n","import isArray from '../../helpers/isArray';\n\nfunction map(apply, data, values) {\n  const scopedData = apply(values[0], data);\n  const scopedLogic = values[1];\n\n  if (!isArray(scopedData)) {\n    return [];\n  }\n\n  return scopedData.map(datum => apply(scopedLogic, datum));\n}\n\nexport default map;\n","function none(apply, data, values) {\n  const filtered = apply({ filter: values }, data);\n\n  return filtered.length === 0;\n}\n\nexport default none;\n","import isArray from '../../helpers/isArray';\n\nfunction reduce(apply, data, values) {\n  const scopedData = apply(values[0], data);\n  const scopedLogic = values[1];\n  const initial = typeof values[2] !== 'undefined' ? values[2] : null;\n\n  if (!isArray(scopedData)) {\n    return initial;\n  }\n\n  return scopedData.reduce(\n    (accumulator, current) => apply(scopedLogic, { current, accumulator }),\n    initial\n  );\n}\n\nexport default reduce;\n","function some(apply, data, values) {\n  const filtered = apply({ filter: values }, data);\n\n  return filtered.length > 0;\n}\n\nexport default some;\n","import truthy from '../../helpers/truthy';\n\nfunction and(apply, data, values) {\n  let current;\n\n  for (let i = 0; i < values.length; i++) {\n    current = apply(values[i], data);\n    if (!truthy(current)) {\n      return current;\n    }\n  }\n  return current; // Last\n}\n\nexport default and;\n","import truthy from '../../helpers/truthy';\n\nfunction condition(apply, data, values) {\n  let i;\n\n  /* 'if' should be called with a odd number of parameters, 3 or greater\n    This works on the pattern:\n    if( 0 ){ 1 }else{ 2 };\n    if( 0 ){ 1 }else if( 2 ){ 3 }else{ 4 };\n    if( 0 ){ 1 }else if( 2 ){ 3 }else if( 4 ){ 5 }else{ 6 };\n\n    The implementation is:\n    For pairs of values (0,1 then 2,3 then 4,5 etc)\n    If the first evaluates truthy, evaluate and return the second\n    If the first evaluates falsy, jump to the next pair (e.g, 0,1 to 2,3)\n    given one parameter, evaluate and return it. (it's an Else and all the If/ElseIf were false)\n    given 0 parameters, return NULL (not great practice, but there was no Else)\n    */\n  for (i = 0; i < values.length - 1; i += 2) {\n    if (truthy(apply(values[i], data))) {\n      return apply(values[i + 1], data);\n    }\n  }\n\n  if (values.length === i + 1) {\n    return apply(values[i], data);\n  }\n\n  return null;\n}\n\ncondition.op = ['if', '?:'];\n\nexport default condition;\n","import truthy from '../../helpers/truthy';\n\nfunction or(apply, data, values) {\n  let current;\n\n  for (let i = 0; i < values.length; i++) {\n    current = apply(values[i], data);\n    if (truthy(current)) {\n      return current;\n    }\n  }\n  return current; // Last\n}\n\nexport default or;\n","import getOperator from './getOperator';\n\nfunction getValues(logic) {\n  return logic[getOperator(logic)];\n}\n\nexport default getValues;\n","/**\n * Return an array that contains no duplicates (original not modified)\n * @param  {array} array   Original reference array\n * @return {array}         New array with no duplicates\n */\nfunction arrayUnique(array) {\n  const a = [];\n  for (let i = 0, l = array.length; i < l; i++) {\n    if (a.indexOf(array[i]) === -1) {\n      a.push(array[i]);\n    }\n  }\n  return a;\n}\n\nexport default arrayUnique;\n","import isArray from './isArray';\nimport isLogic from './isLogic';\nimport getOperator from './getOperator';\nimport arrayUnique from './arrayUnique';\n\nfunction usesData(logic) {\n  const collection = [];\n\n  if (isLogic(logic)) {\n    const op = getOperator(logic);\n    let values = logic[op];\n\n    if (!isArray(values)) {\n      values = [values];\n    }\n\n    if (op === 'var') {\n      // This doesn't cover the case where the arg to var is itself a rule.\n      collection.push(values[0]);\n    } else {\n      // Recursion!\n      values.forEach(val => {\n        collection.push(...usesData(val));\n      });\n    }\n  }\n\n  return arrayUnique(collection);\n}\n\nexport default usesData;\n","import isArray from './isArray';\nimport isLogic from './isLogic';\nimport getOperator from './getOperator';\nimport getValues from './getValues';\n\nfunction ruleLike(rule, pattern) {\n  // console.log(\"Is \". JSON.stringify(rule) . \" like \" . JSON.stringify(pattern) . \"?\");\n  if (pattern === rule) {\n    return true;\n  } // TODO : Deep object equivalency?\n  if (pattern === '@') {\n    return true;\n  } // Wildcard!\n  if (pattern === 'number') {\n    return typeof rule === 'number';\n  }\n  if (pattern === 'string') {\n    return typeof rule === 'string';\n  }\n  if (pattern === 'array') {\n    // !logic test might be superfluous in JavaScript\n    return isArray(rule) && !isLogic(rule);\n  }\n\n  if (isLogic(pattern)) {\n    if (isLogic(rule)) {\n      const pattern_op = getOperator(pattern);\n      const rule_op = getOperator(rule);\n\n      if (pattern_op === '@' || pattern_op === rule_op) {\n        // echo \"\\nOperators match, go deeper\\n\";\n        return ruleLike(getValues(rule, false), getValues(pattern, false));\n      }\n    }\n    return false; // pattern is logic, rule isn't, can't be eq\n  }\n\n  if (isArray(pattern)) {\n    if (isArray(rule)) {\n      if (pattern.length !== rule.length) {\n        return false;\n      }\n      /*\n        Note, array order MATTERS, because we're using this array test logic to consider arguments, where order can matter. (e.g., + is commutative, but '-' or 'if' or 'var' are NOT)\n      */\n      for (let i = 0; i < pattern.length; i += 1) {\n        // If any fail, we fail\n        if (!ruleLike(rule[i], pattern[i])) {\n          return false;\n        }\n      }\n      return true; // If they *all* passed, we pass\n    }\n    return false; // Pattern is array, rule isn't\n  }\n\n  // Not logic, not array, not a === match for rule.\n  return false;\n}\n\nexport default ruleLike;\n","import createJsonLogic from './createJsonLogic';\nimport * as operations from './operations';\nimport * as visitors from './visitors';\nimport isLogic from './helpers/isLogic';\nimport truthy from './helpers/truthy';\nimport getOperator from './helpers/getOperator';\nimport getValues from './helpers/getValues';\nimport usesData from './helpers/usesData';\nimport ruleLike from './helpers/ruleLike';\n\nconst jsonLogic = createJsonLogic(operations, visitors);\n\n// restore original public API\njsonLogic.is_logic = isLogic;\njsonLogic.truthy = truthy;\njsonLogic.get_operator = getOperator;\njsonLogic.get_values = getValues;\njsonLogic.uses_data = usesData;\njsonLogic.rule_like = ruleLike;\n\nexport default jsonLogic;\n"],"names":["Array","isArray","isLogic","logic","Object","keys","length","getOperator","createJsonLogic","_operations","_visitors","operations","visitors","forEach","name","operation","addOperation","op","visitor","addVisitor","removeOperation","key","removeVisitor","apply","data","map","l","values","i","val","operator","withApply","unshift","indexOf","sub_ops","String","split","undefined","Error","slice","join","add_operation","rm_operation","add_visitor","rm_visitor","variable","a","b","not_found","sub_props","missing","are_missing","args","value","var","push","missingSome","need_count","options","add","reduce","parseFloat","divide","modulo","multiply","substract","merge","concat","equal","truthy","not","notEqual","strictEqual","strictNotEqual","log","console","method","obj","methodName","greater","greaterEqual","less","c","lessEqual","max","Math","min","cat","substr","source","start","end","temp","all","scopedData","scopedLogic","filter","datum","none","filtered","initial","accumulator","current","some","and","condition","or","getValues","arrayUnique","array","usesData","collection","ruleLike","rule","pattern","pattern_op","rule_op","jsonLogic","is_logic","get_operator","get_values","uses_data","rule_like"],"mappings":";;;;;;AAAA,gBAAeA,KAAK,CAACC,OAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EACtB,SACE,QAAOA,KAAP,MAAiB,QAAjB;EACAA,EAAAA,KAAK,KAAK,IADV;EAEA,GAACF,OAAO,CAACE,KAAD,CAFR;EAGAC,EAAAA,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,MAAnB,KAA8B,CAJhC;EAAA;EAMD;;ECTD,SAASC,WAAT,CAAqBJ,KAArB,EAA4B;EAC1B,SAAOC,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmB,CAAnB,CAAP;EACD;;ECED,SAASK,eAAT,CAAyBC,WAAzB,EAAsCC,SAAtC,EAAiD;EAC/C,MAAMC,UAAU,GAAG,EAAnB;EACA,MAAMC,QAAQ,GAAG,EAAjB;;EAEA,MAAIH,WAAJ,EAAiB;EACfL,IAAAA,MAAM,CAACC,IAAP,CAAYI,WAAZ,EAAyBI,OAAzB,CAAiC,UAAAC,IAAI,EAAI;EACvC,UAAMC,SAAS,GAAGN,WAAW,CAACK,IAAD,CAA7B;EAEAE,MAAAA,YAAY,CAACD,SAAS,CAACE,EAAV,IAAgBH,IAAjB,EAAuBC,SAAvB,CAAZ;EACD,KAJD;EAKD;;EAED,MAAIL,SAAJ,EAAe;EACbN,IAAAA,MAAM,CAACC,IAAP,CAAYK,SAAZ,EAAuBG,OAAvB,CAA+B,UAAAC,IAAI,EAAI;EACrC,UAAMI,OAAO,GAAGR,SAAS,CAACI,IAAD,CAAzB;EAEAK,MAAAA,UAAU,CAACD,OAAO,CAACD,EAAR,IAAcH,IAAf,EAAqBI,OAArB,CAAV;EACD,KAJD;EAKD;;EAED,WAASF,YAAT,CAAsBF,IAAtB,EAA4BG,EAA5B,EAAgC;EAC9BN,IAAAA,UAAU,CAACG,IAAD,CAAV,GAAmBG,EAAnB;EACD;;EAED,WAASG,eAAT,CAAyBN,IAAzB,EAA+B;EAC7B,WAAOH,UAAU,CAACG,IAAD,CAAjB;EACD;;EAED,WAASK,UAAT,CAAoBL,IAApB,EAA0BG,EAA1B,EAA8B;EAC5B,QAAIhB,OAAO,CAACa,IAAD,CAAX,EAAmB;EACjBA,MAAAA,IAAI,CAACD,OAAL,CAAa,UAAAQ,GAAG;EAAA,eAAIF,UAAU,CAACE,GAAD,EAAMJ,EAAN,CAAd;EAAA,OAAhB;EACA;EACD;;EAEDL,IAAAA,QAAQ,CAACE,IAAD,CAAR,GAAiBG,EAAjB;EACD;;EAED,WAASK,aAAT,CAAuBR,IAAvB,EAA6B;EAC3B,QAAIb,OAAO,CAACa,IAAD,CAAX,EAAmB;EACjBA,MAAAA,IAAI,CAACD,OAAL,CAAaS,aAAb;EACA;EACD;;EAED,WAAOV,QAAQ,CAACE,IAAD,CAAf;EACD;;EAED,WAASS,KAAT,CAAepB,KAAf,EAAiC;EAAA,QAAXqB,IAAW,uEAAJ,EAAI;;EAC/B;EACA,QAAIvB,OAAO,CAACE,KAAD,CAAX,EAAoB;EAClB,aAAOA,KAAK,CAACsB,GAAN,CAAU,UAAAC,CAAC;EAAA,eAAIH,KAAK,CAACG,CAAD,EAAIF,IAAJ,CAAT;EAAA,OAAX,CAAP;EACD,KAJ8B;;;EAM/B,QAAI,CAACtB,OAAO,CAACC,KAAD,CAAZ,EAAqB;EACnB,aAAOA,KAAP;EACD;;EAED,QAAMc,EAAE,GAAGV,WAAW,CAACJ,KAAD,CAAtB;EACA,QAAIwB,MAAM,GAAGxB,KAAK,CAACc,EAAD,CAAlB;EACA,QAAIW,CAAJ,CAZ+B;;EAe/B,QAAI,CAAC3B,OAAO,CAAC0B,MAAD,CAAZ,EAAsB;EACpBA,MAAAA,MAAM,GAAG,CAACA,MAAD,CAAT;EACD,KAjB8B;;;EAoB/B,QAAI,OAAOf,QAAQ,CAACK,EAAD,CAAf,KAAwB,UAA5B,EAAwC;EACtC,aAAOL,QAAQ,CAACK,EAAD,CAAR,CAAaM,KAAb,EAAoBC,IAApB,EAA0BG,MAA1B,CAAP;EACD,KAtB8B;;;EAyB/BA,IAAAA,MAAM,GAAGA,MAAM,CAACF,GAAP,CAAW,UAAAI,GAAG;EAAA,aAAIN,KAAK,CAACM,GAAD,EAAML,IAAN,CAAT;EAAA,KAAd,CAAT,CAzB+B;EA4B/B;EACA;;EACA,QAAMM,QAAQ,GAAGnB,UAAU,CAACM,EAAD,CAA3B;;EACA,QAAI,OAAOa,QAAP,KAAoB,UAAxB,EAAoC;EAClC,UAAIA,QAAQ,CAACC,SAAb,EAAwB;EACtBJ,QAAAA,MAAM,CAACK,OAAP,CAAeT,KAAf;EACD;;EAED,aAAOO,QAAQ,CAACP,KAAT,CAAeC,IAAf,EAAqBG,MAArB,CAAP;EACD;;EACD,QAAIV,EAAE,CAACgB,OAAH,CAAW,GAAX,IAAkB,CAAtB,EAAyB;EACvB;EACA,UAAMC,OAAO,GAAGC,MAAM,CAAClB,EAAD,CAAN,CAAWmB,KAAX,CAAiB,GAAjB,CAAhB;EACA,UAAIrB,SAAS,GAAGJ,UAAhB;;EACA,WAAKiB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGM,OAAO,CAAC5B,MAAxB,EAAgCsB,CAAC,EAAjC,EAAqC;EACnC;EACAb,QAAAA,SAAS,GAAGA,SAAS,CAACmB,OAAO,CAACN,CAAD,CAAR,CAArB;;EACA,YAAIb,SAAS,KAAKsB,SAAlB,EAA6B;EAC3B,gBAAM,IAAIC,KAAJ,kCACsBrB,EADtB,yBACuCiB,OAAO,CAC/CK,KADwC,CAClC,CADkC,EAC/BX,CAAC,GAAG,CAD2B,EAExCY,IAFwC,CAEnC,GAFmC,CADvC,OAAN;EAKD;EACF;;EAED,aAAOzB,SAAS,CAACQ,KAAV,CAAgBC,IAAhB,EAAsBG,MAAtB,CAAP;EACD;;EAED,UAAM,IAAIW,KAAJ,kCAAoCrB,EAApC,EAAN;EACD;;EAED,SAAO;EACLM,IAAAA,KAAK,EAALA,KADK;EAELkB,IAAAA,aAAa,EAAEzB,YAFV;EAGL0B,IAAAA,YAAY,EAAEtB,eAHT;EAILuB,IAAAA,WAAW,EAAExB,UAJR;EAKLyB,IAAAA,UAAU,EAAEtB;EALP,GAAP;EAOD;;ECrHD,SAASuB,QAAT,CAAkBC,CAAlB,EAAqBC,CAArB,EAAwB;EACtB,MAAMC,SAAS,GAAGD,CAAC,KAAKV,SAAN,GAAkB,IAAlB,GAAyBU,CAA3C;EACA,MAAIvB,IAAI,GAAG,IAAX;;EAEA,MAAI,OAAOsB,CAAP,KAAa,WAAb,IAA4BA,CAAC,KAAK,EAAlC,IAAwCA,CAAC,KAAK,IAAlD,EAAwD;EACtD,WAAOtB,IAAP;EACD;;EAED,MAAMyB,SAAS,GAAGd,MAAM,CAACW,CAAD,CAAN,CAAUV,KAAV,CAAgB,GAAhB,CAAlB;;EAEA,OAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqB,SAAS,CAAC3C,MAA9B,EAAsCsB,CAAC,EAAvC,EAA2C;EACzC,QAAIJ,IAAI,KAAK,IAAb,EAAmB;EACjB,aAAOwB,SAAP;EACD,KAHwC;;;EAKzCxB,IAAAA,IAAI,GAAGA,IAAI,CAACyB,SAAS,CAACrB,CAAD,CAAV,CAAX;;EACA,QAAIJ,IAAI,KAAKa,SAAb,EAAwB;EACtB,aAAOW,SAAP;EACD;EACF;;EAED,SAAOxB,IAAP;EACD;;EAEDqB,QAAQ,CAAC5B,EAAT,GAAc,KAAd;;ECtBA,SAASiC,OAAT,CAAiB3B,KAAjB,EAAiC;EAC/B;;;;;;EAOA,MAAM4B,WAAW,GAAG,EAApB;;EAR+B,oCAANC,IAAM;EAANA,IAAAA,IAAM;EAAA;;EAS/B,MAAM/C,IAAI,GAAGJ,OAAO,CAACmD,IAAI,CAAC,CAAD,CAAL,CAAP,GAAmBA,IAAI,CAAC,CAAD,CAAvB,GAA6BA,IAA1C;;EAEA,OAAK,IAAIxB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvB,IAAI,CAACC,MAAzB,EAAiCsB,CAAC,EAAlC,EAAsC;EACpC,QAAMP,GAAG,GAAGhB,IAAI,CAACuB,CAAD,CAAhB;EACA,QAAMyB,KAAK,GAAG9B,KAAK,CAAC;EAAE+B,MAAAA,GAAG,EAAEjC;EAAP,KAAD,EAAe,IAAf,CAAnB;;EACA,QAAIgC,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,EAAhC,EAAoC;EAClCF,MAAAA,WAAW,CAACI,IAAZ,CAAiBlC,GAAjB;EACD;EACF;;EAED,SAAO8B,WAAP;EACD;;EAEDD,OAAO,CAACnB,SAAR,GAAoB,IAApB;;ECxBA,SAASyB,WAAT,CAAqBjC,KAArB,EAA4BkC,UAA5B,EAAwCC,OAAxC,EAAiD;EAC/C;EACA,MAAMP,WAAW,GAAG5B,KAAK,CAAC;EAAE2B,IAAAA,OAAO,EAAEQ;EAAX,GAAD,EAAuB,IAAvB,CAAzB;;EAEA,MAAIA,OAAO,CAACpD,MAAR,GAAiB6C,WAAW,CAAC7C,MAA7B,IAAuCmD,UAA3C,EAAuD;EACrD,WAAO,EAAP;EACD;;EACD,SAAON,WAAP;EACD;;EAEDK,WAAW,CAACvC,EAAZ,GAAiB,cAAjB;EACAuC,WAAW,CAACzB,SAAZ,GAAwB,IAAxB;;ECXA,SAAS4B,GAAT,GAAsB;EAAA,oCAANP,IAAM;EAANA,IAAAA,IAAM;EAAA;;EACpB,SAAOA,IAAI,CAACQ,MAAL,CAAY,UAACd,CAAD,EAAIC,CAAJ;EAAA,WAAUc,UAAU,CAACf,CAAD,EAAI,EAAJ,CAAV,GAAoBe,UAAU,CAACd,CAAD,EAAI,EAAJ,CAAxC;EAAA,GAAZ,EAA6D,CAA7D,CAAP;EACD;;EAEDY,GAAG,CAAC1C,EAAJ,GAAS,GAAT;;ECJA,SAAS6C,MAAT,CAAgBhB,CAAhB,EAAmBC,CAAnB,EAAsB;EACpB,SAAOD,CAAC,GAAGC,CAAX;EACD;;EAEDe,MAAM,CAAC7C,EAAP,GAAY,GAAZ;;ECJA,SAAS8C,MAAT,CAAgBjB,CAAhB,EAAmBC,CAAnB,EAAsB;EACpB,SAAOD,CAAC,GAAGC,CAAX;EACD;;EAEDgB,MAAM,CAAC9C,EAAP,GAAY,GAAZ;;ECJA,SAAS+C,QAAT,GAA2B;EAAA,oCAANZ,IAAM;EAANA,IAAAA,IAAM;EAAA;;EACzB,SAAOA,IAAI,CAACQ,MAAL,CAAY,UAACd,CAAD,EAAIC,CAAJ;EAAA,WAAUc,UAAU,CAACf,CAAD,EAAI,EAAJ,CAAV,GAAoBe,UAAU,CAACd,CAAD,EAAI,EAAJ,CAAxC;EAAA,GAAZ,EAA6D,CAA7D,CAAP;EACD;;EAEDiB,QAAQ,CAAC/C,EAAT,GAAc,GAAd;;ECJA,SAASgD,SAAT,CAAmBnB,CAAnB,EAAsBC,CAAtB,EAAyB;EACvB,MAAIA,CAAC,KAAKV,SAAV,EAAqB;EACnB,WAAO,CAACS,CAAR;EACD;;EACD,SAAOA,CAAC,GAAGC,CAAX;EACD;;EAEDkB,SAAS,CAAChD,EAAV,GAAe,GAAf;;ECPA,SAASiD,KAAT,GAAwB;EAAA,oCAANd,IAAM;EAANA,IAAAA,IAAM;EAAA;;EACtB,SAAOA,IAAI,CAACQ,MAAL,CAAY,UAACd,CAAD,EAAIC,CAAJ;EAAA,WAAUD,CAAC,CAACqB,MAAF,CAASpB,CAAT,CAAV;EAAA,GAAZ,EAAmC,EAAnC,CAAP;EACD;;ECFD;;ECAA,SAASqB,KAAT,CAAetB,CAAf,EAAkBC,CAAlB,EAAqB;EACnB;EACA,SAAOD,CAAC,IAAIC,CAAZ;EACD;;EAEDqB,KAAK,CAACnD,EAAN,GAAW,IAAX;;ECHA;;;;;;EAKA,SAASoD,MAAT,CAAgBhB,KAAhB,EAAuB;EACrB,MAAIpD,OAAO,CAACoD,KAAD,CAAP,IAAkBA,KAAK,CAAC/C,MAAN,KAAiB,CAAvC,EAA0C;EACxC,WAAO,KAAP;EACD;;EAED,SAAO,CAAC,CAAC+C,KAAT;EACD;;ECXD,SAASiB,GAAT,CAAaxB,CAAb,EAAgB;EACd,SAAO,CAACuB,MAAM,CAACvB,CAAD,CAAd;EACD;;EAEDwB,GAAG,CAACrD,EAAJ,GAAS,GAAT;;ECNA,SAASsD,QAAT,CAAkBzB,CAAlB,EAAqBC,CAArB,EAAwB;EACtB;EACA,SAAOD,CAAC,IAAIC,CAAZ;EACD;;EAEDwB,QAAQ,CAACtD,EAAT,GAAc,IAAd;;ECHAoD,MAAM,CAACpD,EAAP,GAAY,IAAZ;;ECFA,SAASuD,WAAT,CAAqB1B,CAArB,EAAwBC,CAAxB,EAA2B;EACzB,SAAOD,CAAC,KAAKC,CAAb;EACD;;EAEDyB,WAAW,CAACvD,EAAZ,GAAiB,KAAjB;;ECJA,SAASwD,cAAT,CAAwB3B,CAAxB,EAA2BC,CAA3B,EAA8B;EAC5B,SAAOD,CAAC,KAAKC,CAAb;EACD;;EAED0B,cAAc,CAACxD,EAAf,GAAoB,KAApB;;ECJA,SAASgB,OAAT,CAAiBa,CAAjB,EAAoBC,CAApB,EAAuB;EACrB,MAAI,CAACA,CAAD,IAAM,OAAOA,CAAC,CAACd,OAAT,KAAqB,WAA/B,EAA4C,OAAO,KAAP;EAC5C,SAAOc,CAAC,CAACd,OAAF,CAAUa,CAAV,MAAiB,CAAC,CAAzB;EACD;;EAEDb,OAAO,CAAChB,EAAR,GAAa,IAAb;;ECLA,SAASyD,GAAT,CAAa5B,CAAb,EAAgB;EACd;EACA6B,EAAAA,OAAO,CAACD,GAAR,CAAY5B,CAAZ;EAEA,SAAOA,CAAP;EACD;;ECLD,SAAS8B,MAAT,CAAgBC,GAAhB,EAAqBC,UAArB,EAAiC1B,IAAjC,EAAuC;EACrC;EACA,SAAOyB,GAAG,CAACC,UAAD,CAAH,CAAgBvD,KAAhB,CAAsBsD,GAAtB,EAA2BzB,IAA3B,CAAP;EACD;;ECHD,SAAS2B,OAAT,CAAiBjC,CAAjB,EAAoBC,CAApB,EAAuB;EACrB,SAAOD,CAAC,GAAGC,CAAX;EACD;;EAEDgC,OAAO,CAAC9D,EAAR,GAAa,GAAb;;ECJA,SAAS+D,YAAT,CAAsBlC,CAAtB,EAAyBC,CAAzB,EAA4B;EAC1B,SAAOD,CAAC,IAAIC,CAAZ;EACD;;EAEDiC,YAAY,CAAC/D,EAAb,GAAkB,IAAlB;;ECJA,SAASgE,IAAT,CAAcnC,CAAd,EAAiBC,CAAjB,EAAoBmC,CAApB,EAAuB;EACrB,SAAOA,CAAC,KAAK7C,SAAN,GAAkBS,CAAC,GAAGC,CAAtB,GAA0BD,CAAC,GAAGC,CAAJ,IAASA,CAAC,GAAGmC,CAA9C;EACD;;EAEDD,IAAI,CAAChE,EAAL,GAAU,GAAV;;ECJA,SAASkE,SAAT,CAAmBrC,CAAnB,EAAsBC,CAAtB,EAAyBmC,CAAzB,EAA4B;EAC1B,SAAOA,CAAC,KAAK7C,SAAN,GAAkBS,CAAC,IAAIC,CAAvB,GAA2BD,CAAC,IAAIC,CAAL,IAAUA,CAAC,IAAImC,CAAjD;EACD;;EAEDC,SAAS,CAAClE,EAAV,GAAe,IAAf;;ECJA,SAASmE,GAAT,GAAsB;EACpB,SAAOC,IAAI,CAACD,GAAL,OAAAC,IAAI,YAAX;EACD;;ECFD,SAASC,GAAT,GAAsB;EACpB,SAAOD,IAAI,CAACC,GAAL,OAAAD,IAAI,YAAX;EACD;;ECFD,SAASE,GAAT,GAAsB;EAAA,oCAANnC,IAAM;EAANA,IAAAA,IAAM;EAAA;;EACpB,SAAOA,IAAI,CAACZ,IAAL,CAAU,EAAV,CAAP;EACD;;ECFD,SAASgD,MAAT,CAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,GAA/B,EAAoC;EAClC,MAAIA,GAAG,GAAG,CAAV,EAAa;EACX;EACA,QAAMC,IAAI,GAAGzD,MAAM,CAACsD,MAAD,CAAN,CAAeD,MAAf,CAAsBE,KAAtB,CAAb;EACA,WAAOE,IAAI,CAACJ,MAAL,CAAY,CAAZ,EAAeI,IAAI,CAACtF,MAAL,GAAcqF,GAA7B,CAAP;EACD;;EACD,SAAOxD,MAAM,CAACsD,MAAD,CAAN,CAAeD,MAAf,CAAsBE,KAAtB,EAA6BC,GAA7B,CAAP;EACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECLD,SAASE,GAAT,CAAatE,KAAb,EAAoBC,IAApB,EAA0BG,MAA1B,EAAkC;EAChC,MAAMmE,UAAU,GAAGvE,KAAK,CAACI,MAAM,CAAC,CAAD,CAAP,EAAYH,IAAZ,CAAxB;EACA,MAAMuE,WAAW,GAAGpE,MAAM,CAAC,CAAD,CAA1B,CAFgC;;EAIhC,MAAI,CAACmE,UAAU,CAACxF,MAAhB,EAAwB;EACtB,WAAO,KAAP;EACD;;EACD,OAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkE,UAAU,CAACxF,MAA/B,EAAuCsB,CAAC,IAAI,CAA5C,EAA+C;EAC7C,QAAI,CAACyC,MAAM,CAAC9C,KAAK,CAACwE,WAAD,EAAcD,UAAU,CAAClE,CAAD,CAAxB,CAAN,CAAX,EAAgD;EAC9C,aAAO,KAAP,CAD8C;EAE/C;EACF;;EACD,SAAO,IAAP,CAZgC;EAajC;;ECZD,SAASoE,MAAT,CAAgBzE,KAAhB,EAAuBC,IAAvB,EAA6BG,MAA7B,EAAqC;EACnC,MAAMmE,UAAU,GAAGvE,KAAK,CAACI,MAAM,CAAC,CAAD,CAAP,EAAYH,IAAZ,CAAxB;EACA,MAAMuE,WAAW,GAAGpE,MAAM,CAAC,CAAD,CAA1B;;EAEA,MAAI,CAAC1B,OAAO,CAAC6F,UAAD,CAAZ,EAA0B;EACxB,WAAO,EAAP;EACD,GANkC;EAQnC;EACA;;;EACA,SAAOA,UAAU,CAACE,MAAX,CAAkB,UAAAC,KAAK;EAAA,WAAI5B,MAAM,CAAC9C,KAAK,CAACwE,WAAD,EAAcE,KAAd,CAAN,CAAV;EAAA,GAAvB,CAAP;EACD;;ECZD,SAASxE,GAAT,CAAaF,KAAb,EAAoBC,IAApB,EAA0BG,MAA1B,EAAkC;EAChC,MAAMmE,UAAU,GAAGvE,KAAK,CAACI,MAAM,CAAC,CAAD,CAAP,EAAYH,IAAZ,CAAxB;EACA,MAAMuE,WAAW,GAAGpE,MAAM,CAAC,CAAD,CAA1B;;EAEA,MAAI,CAAC1B,OAAO,CAAC6F,UAAD,CAAZ,EAA0B;EACxB,WAAO,EAAP;EACD;;EAED,SAAOA,UAAU,CAACrE,GAAX,CAAe,UAAAwE,KAAK;EAAA,WAAI1E,KAAK,CAACwE,WAAD,EAAcE,KAAd,CAAT;EAAA,GAApB,CAAP;EACD;;ECXD,SAASC,IAAT,CAAc3E,KAAd,EAAqBC,IAArB,EAA2BG,MAA3B,EAAmC;EACjC,MAAMwE,QAAQ,GAAG5E,KAAK,CAAC;EAAEyE,IAAAA,MAAM,EAAErE;EAAV,GAAD,EAAqBH,IAArB,CAAtB;EAEA,SAAO2E,QAAQ,CAAC7F,MAAT,KAAoB,CAA3B;EACD;;ECFD,SAASsD,MAAT,CAAgBrC,KAAhB,EAAuBC,IAAvB,EAA6BG,MAA7B,EAAqC;EACnC,MAAMmE,UAAU,GAAGvE,KAAK,CAACI,MAAM,CAAC,CAAD,CAAP,EAAYH,IAAZ,CAAxB;EACA,MAAMuE,WAAW,GAAGpE,MAAM,CAAC,CAAD,CAA1B;EACA,MAAMyE,OAAO,GAAG,OAAOzE,MAAM,CAAC,CAAD,CAAb,KAAqB,WAArB,GAAmCA,MAAM,CAAC,CAAD,CAAzC,GAA+C,IAA/D;;EAEA,MAAI,CAAC1B,OAAO,CAAC6F,UAAD,CAAZ,EAA0B;EACxB,WAAOM,OAAP;EACD;;EAED,SAAON,UAAU,CAAClC,MAAX,CACL,UAACyC,WAAD,EAAcC,OAAd;EAAA,WAA0B/E,KAAK,CAACwE,WAAD,EAAc;EAAEO,MAAAA,OAAO,EAAPA,OAAF;EAAWD,MAAAA,WAAW,EAAXA;EAAX,KAAd,CAA/B;EAAA,GADK,EAELD,OAFK,CAAP;EAID;;ECfD,SAASG,IAAT,CAAchF,KAAd,EAAqBC,IAArB,EAA2BG,MAA3B,EAAmC;EACjC,MAAMwE,QAAQ,GAAG5E,KAAK,CAAC;EAAEyE,IAAAA,MAAM,EAAErE;EAAV,GAAD,EAAqBH,IAArB,CAAtB;EAEA,SAAO2E,QAAQ,CAAC7F,MAAT,GAAkB,CAAzB;EACD;;ECFD,SAASkG,GAAT,CAAajF,KAAb,EAAoBC,IAApB,EAA0BG,MAA1B,EAAkC;EAChC,MAAI2E,OAAJ;;EAEA,OAAK,IAAI1E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,CAACrB,MAA3B,EAAmCsB,CAAC,EAApC,EAAwC;EACtC0E,IAAAA,OAAO,GAAG/E,KAAK,CAACI,MAAM,CAACC,CAAD,CAAP,EAAYJ,IAAZ,CAAf;;EACA,QAAI,CAAC6C,MAAM,CAACiC,OAAD,CAAX,EAAsB;EACpB,aAAOA,OAAP;EACD;EACF;;EACD,SAAOA,OAAP,CATgC;EAUjC;;ECVD,SAASG,SAAT,CAAmBlF,KAAnB,EAA0BC,IAA1B,EAAgCG,MAAhC,EAAwC;EACtC,MAAIC,CAAJ;EAEA;;;;;;;;;;;;;EAaA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,MAAM,CAACrB,MAAP,GAAgB,CAAhC,EAAmCsB,CAAC,IAAI,CAAxC,EAA2C;EACzC,QAAIyC,MAAM,CAAC9C,KAAK,CAACI,MAAM,CAACC,CAAD,CAAP,EAAYJ,IAAZ,CAAN,CAAV,EAAoC;EAClC,aAAOD,KAAK,CAACI,MAAM,CAACC,CAAC,GAAG,CAAL,CAAP,EAAgBJ,IAAhB,CAAZ;EACD;EACF;;EAED,MAAIG,MAAM,CAACrB,MAAP,KAAkBsB,CAAC,GAAG,CAA1B,EAA6B;EAC3B,WAAOL,KAAK,CAACI,MAAM,CAACC,CAAD,CAAP,EAAYJ,IAAZ,CAAZ;EACD;;EAED,SAAO,IAAP;EACD;;EAEDiF,SAAS,CAACxF,EAAV,GAAe,CAAC,IAAD,EAAO,IAAP,CAAf;;EC7BA,SAASyF,EAAT,CAAYnF,KAAZ,EAAmBC,IAAnB,EAAyBG,MAAzB,EAAiC;EAC/B,MAAI2E,OAAJ;;EAEA,OAAK,IAAI1E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,CAACrB,MAA3B,EAAmCsB,CAAC,EAApC,EAAwC;EACtC0E,IAAAA,OAAO,GAAG/E,KAAK,CAACI,MAAM,CAACC,CAAD,CAAP,EAAYJ,IAAZ,CAAf;;EACA,QAAI6C,MAAM,CAACiC,OAAD,CAAV,EAAqB;EACnB,aAAOA,OAAP;EACD;EACF;;EACD,SAAOA,OAAP,CAT+B;EAUhC;;;;;;;;;;;;;;;;ECVD,SAASK,SAAT,CAAmBxG,KAAnB,EAA0B;EACxB,SAAOA,KAAK,CAACI,WAAW,CAACJ,KAAD,CAAZ,CAAZ;EACD;;ECJD;;;;;EAKA,SAASyG,WAAT,CAAqBC,KAArB,EAA4B;EAC1B,MAAM/D,CAAC,GAAG,EAAV;;EACA,OAAK,IAAIlB,CAAC,GAAG,CAAR,EAAWF,CAAC,GAAGmF,KAAK,CAACvG,MAA1B,EAAkCsB,CAAC,GAAGF,CAAtC,EAAyCE,CAAC,EAA1C,EAA8C;EAC5C,QAAIkB,CAAC,CAACb,OAAF,CAAU4E,KAAK,CAACjF,CAAD,CAAf,MAAwB,CAAC,CAA7B,EAAgC;EAC9BkB,MAAAA,CAAC,CAACS,IAAF,CAAOsD,KAAK,CAACjF,CAAD,CAAZ;EACD;EACF;;EACD,SAAOkB,CAAP;EACD;;ECRD,SAASgE,QAAT,CAAkB3G,KAAlB,EAAyB;EACvB,MAAM4G,UAAU,GAAG,EAAnB;;EAEA,MAAI7G,OAAO,CAACC,KAAD,CAAX,EAAoB;EAClB,QAAMc,EAAE,GAAGV,WAAW,CAACJ,KAAD,CAAtB;EACA,QAAIwB,MAAM,GAAGxB,KAAK,CAACc,EAAD,CAAlB;;EAEA,QAAI,CAAChB,OAAO,CAAC0B,MAAD,CAAZ,EAAsB;EACpBA,MAAAA,MAAM,GAAG,CAACA,MAAD,CAAT;EACD;;EAED,QAAIV,EAAE,KAAK,KAAX,EAAkB;EAChB;EACA8F,MAAAA,UAAU,CAACxD,IAAX,CAAgB5B,MAAM,CAAC,CAAD,CAAtB;EACD,KAHD,MAGO;EACL;EACAA,MAAAA,MAAM,CAACd,OAAP,CAAe,UAAAgB,GAAG,EAAI;EACpBkF,QAAAA,UAAU,CAACxD,IAAX,OAAAwD,UAAU,qBAASD,QAAQ,CAACjF,GAAD,CAAjB,EAAV;EACD,OAFD;EAGD;EACF;;EAED,SAAO+E,WAAW,CAACG,UAAD,CAAlB;EACD;;ECvBD,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,OAAxB,EAAiC;EAC/B;EACA,MAAIA,OAAO,KAAKD,IAAhB,EAAsB;EACpB,WAAO,IAAP;EACD,GAJ8B;;;EAK/B,MAAIC,OAAO,KAAK,GAAhB,EAAqB;EACnB,WAAO,IAAP;EACD,GAP8B;;;EAQ/B,MAAIA,OAAO,KAAK,QAAhB,EAA0B;EACxB,WAAO,OAAOD,IAAP,KAAgB,QAAvB;EACD;;EACD,MAAIC,OAAO,KAAK,QAAhB,EAA0B;EACxB,WAAO,OAAOD,IAAP,KAAgB,QAAvB;EACD;;EACD,MAAIC,OAAO,KAAK,OAAhB,EAAyB;EACvB;EACA,WAAOjH,OAAO,CAACgH,IAAD,CAAP,IAAiB,CAAC/G,OAAO,CAAC+G,IAAD,CAAhC;EACD;;EAED,MAAI/G,OAAO,CAACgH,OAAD,CAAX,EAAsB;EACpB,QAAIhH,OAAO,CAAC+G,IAAD,CAAX,EAAmB;EACjB,UAAME,UAAU,GAAG5G,WAAW,CAAC2G,OAAD,CAA9B;EACA,UAAME,OAAO,GAAG7G,WAAW,CAAC0G,IAAD,CAA3B;;EAEA,UAAIE,UAAU,KAAK,GAAf,IAAsBA,UAAU,KAAKC,OAAzC,EAAkD;EAChD;EACA,eAAOJ,QAAQ,CAACL,SAAS,CAACM,IAAD,EAAO,KAAP,CAAV,EAAyBN,SAAS,CAACO,OAAD,EAAU,KAAV,CAAlC,CAAf;EACD;EACF;;EACD,WAAO,KAAP,CAVoB;EAWrB;;EAED,MAAIjH,OAAO,CAACiH,OAAD,CAAX,EAAsB;EACpB,QAAIjH,OAAO,CAACgH,IAAD,CAAX,EAAmB;EACjB,UAAIC,OAAO,CAAC5G,MAAR,KAAmB2G,IAAI,CAAC3G,MAA5B,EAAoC;EAClC,eAAO,KAAP;EACD;EACD;;;;;EAGA,WAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsF,OAAO,CAAC5G,MAA5B,EAAoCsB,CAAC,IAAI,CAAzC,EAA4C;EAC1C;EACA,YAAI,CAACoF,QAAQ,CAACC,IAAI,CAACrF,CAAD,CAAL,EAAUsF,OAAO,CAACtF,CAAD,CAAjB,CAAb,EAAoC;EAClC,iBAAO,KAAP;EACD;EACF;;EACD,aAAO,IAAP,CAbiB;EAclB;;EACD,WAAO,KAAP,CAhBoB;EAiBrB,GAjD8B;;;EAoD/B,SAAO,KAAP;EACD;;EChDD,IAAMyF,SAAS,GAAG7G,eAAe,CAACG,UAAD,EAAaC,QAAb,CAAjC;;EAGAyG,SAAS,CAACC,QAAV,GAAqBpH,OAArB;EACAmH,SAAS,CAAChD,MAAV,GAAmBA,MAAnB;EACAgD,SAAS,CAACE,YAAV,GAAyBhH,WAAzB;EACA8G,SAAS,CAACG,UAAV,GAAuBb,SAAvB;EACAU,SAAS,CAACI,SAAV,GAAsBX,QAAtB;EACAO,SAAS,CAACK,SAAV,GAAsBV,QAAtB;;;;;;;;"}